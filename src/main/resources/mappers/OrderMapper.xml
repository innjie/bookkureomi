<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="com.inyoon.bookkureomi.order.OrderMapper">
	<!-- 새로운 주문번호 가져오기 -->
	<select id="getOrderNo" resultType="integer">
        SELECT ORDERSEQ.nextval from dual
    </select>
    
	<!-- 새로운 주문상세번호 가져오기 -->
    <select id="getODNo" resultType="integer">
        SELECT MAX(odNo)+1 from OrderDetail
    </select>
    
	<!-- 해당 유저번호의 일반 거래 주문 목록 확인 -->
	<select id="getSaleOrderList" parameterType="integer" resultType="com.inyoon.bookkureomi.domain.Order">
        SELECT distinct
			Orders.orderNo, orderDate, info, total	
		FROM 
			Orders, OrderDetail 
		where
			userNo = #{userNo}
			AND Orders.orderNo = OrderDetail.orderNo
			AND OrderDetail.saleNo is not null
		ORDER BY
			Orders.orderNo desc
			
		 <!--  paging
		SELECT
			F.*
		FROM
			(
			SELECT
				ROWNUM AS ROW_NUM, R.*
			FROM
				(
					SELECT 
						orderNo, saleNo, auctionNo, userNo, pAddress, orderDate, rAddress, rName, rPhone
					FROM 
						Orders 
					where
						userNo = #{userNo}
					ORDER BY
						orderNo
				) R ) F
		WHERE
			F.ROW_NUM BETWEEN #{start} and #{end}
		 --> 
    </select>
    
 	<!-- 해당 유저번호의 경매 주문 목록 확인 -->
    <select id="getAuctionOrderList" parameterType="integer" resultType="com.inyoon.bookkureomi.domain.Order">
        SELECT distinct
			orderNo, orderDate, info, total	
		FROM 
			Orders, OrderDetail 
		where
			userNo = #{userNo}
			AND Orders.orderNo = OrderDetail.orderNo
			AND OrderDetail.auctionNo is not null
		ORDER BY
			Orders.orderNo desc
	</select>
   
		 
	<!-- 해당 일반 거래 주문번호의 상세 주문 정보 확인 (주문자 입장에서 주문 확인)-->
    <select id="getSaleOrder" parameterType="integer" resultType="com.inyoon.bookkureomi.domain.OrderDetail">
        SELECT 
			OrderDetail.odNo,
			Orders.orderNo AS "order.orderNo", Orders.pAddress AS "order.pAddress", 
			Orders.orderDate AS "order.orderDate", Orders.rPhone AS "order.rPhone",
			Orders.rAddress AS "order.rAddress", Orders.rName AS "order.rName", 
			Orders.info AS "order.info", Orders.total AS "order.total",
			Sale.saleNo AS "sale.saleNo", Sale.title AS "sale.title", Sale.salePrice AS "sale.salePrice", 
			Sale.userNo AS "order.user.userNo", name AS "order.user.name", id AS "order.user.id"
		FROM 
			OrderDetail, Orders, Sale, Users
		where
			Orders.userNo = Users.userNo
			AND OrderDetail.orderNo = #{orderNo}
			AND OrderDetail.saleNo = Sale.saleNo
			AND OrderDetail.orderNo = Orders.orderNo
		ORDER BY
			Sale.saleNo
    </select>
    
 	<!-- 해당 경매 주문번호의 상세 주문 정보 확인 (주문자 입장에서 주문 확인) -->
    <select id="getAuctionOrder" parameterType="integer" resultType="com.inyoon.bookkureomi.domain.OrderDetail">
        SELECT 
			OrderDetail.odNo,
			Orders.orderNo AS "order.orderNo", Orders.pAddress AS "order.pAddress", 
			Orders.orderDate AS "order.orderDate", Orders.rPhone AS "order.rPhone",
			Orders.rAddress AS "order.rAddress", Orders.rName AS "order.rName", 
			Orders.info AS "order.info", Orders.total AS "order.total",
			Auction.auctionNo AS "auction.auctionNo", Auction.title AS "auction.title", Auction.bidPrice AS "auction.bidPrice", 
			Auction.userNo AS "order.user.userNo", name AS "order.user.name", id AS "order.user.id"
		FROM 
			OrderDetail, Orders, Auction, Users
		where
			Orders.userNo = Users.userNo
			AND OrderDetail.orderNo = #{orderNo}
			AND OrderDetail.auctionNo = Auction.auctionNo
			AND OrderDetail.orderNo = Orders.orderNo
		ORDER BY
			Auction.auctionNo
    </select>
    
  	<!-- 해당 판매번호로 상세 주문 정보 확인 (판매자 입장에서 주문 확인) -->
    <select id="getOrderBySale" parameterType="integer" resultType="com.inyoon.bookkureomi.domain.OrderDetail">
        SELECT 
			OrderDetail.odNo,
			Orders.orderNo AS "order.orderNo", Orders.pAddress AS "order.pAddress", 
			Orders.orderDate AS "order.orderDate", Orders.rPhone AS "order.rPhone",
			Orders.rAddress AS "order.rAddress", Orders.rName AS "order.rName", 
			Orders.info AS "order.info", Orders.total AS "order.total",
			Sale.saleNo AS "sale.saleNo", Sale.title AS "sale.title", Sale.salePrice AS "sale.salePrice", 
			Sale.userNo AS "order.user.userNo", name AS "order.user.name", id AS "order.user.id"
		FROM 
			OrderDetail, Orders, Sale, Users
		where
			Orders.userNo = Users.userNo
			AND OrderDetail.saleNo = #{saleNo}
			AND OrderDetail.saleNo = Sale.saleNo
			AND OrderDetail.orderNo = Orders.orderNo
    </select>
    
  	<!-- order 추가 -->
    <insert id="orderSale" parameterType="com.inyoon.bookkureomi.domain.Order">
    	Insert into Orders (orderNo, userNo, pAddress, rAddress, rName, rPhone, total, info)
    	Values (#{orderNo}, 1, #{pAddress}, #{rAddress}, #{rName}, #{rPhone}, #{total}, #{info})
    </insert>
    
  	<!-- orderDetail 추가 -->
    <insert id="orderDetailSale" parameterType="com.inyoon.bookkureomi.domain.OrderDetail">
    	Insert into OrderDetail (odNo, orderNo, saleNo)
    	Values (#{odNo}, #{order.orderNo}, #{sale.saleNo})
    </insert>
    
  	<!-- 해당 판매의 판매 상태 close로 변경 -->
    <update id="updateSaleStateClose" parameterType="integer">
        UPDATE Sale
        SET
            state = 'close'
        WHERE 
        	saleNo = #{saleNo}
    </update>
    
    
    
    
    
    <insert id="orderAuction" parameterType="com.inyoon.bookkureomi.domain.Order">
    	Insert into Orders (orderNo, userNo, pAddress, rAddress, rName, rPhone, total, info)
    	Values (#{orderNo}, #{user.userNo}, #{pAddress}, #{rAddress}, #{rName}, #{rPhone}, #{total}, #{info})
    </insert>
    
    <insert id="orderDetailAuction" parameterType="com.inyoon.bookkureomi.domain.OrderDetail">
    	Insert into OrderDetail (odNo, orderNo, auctionNo)
    	Values (#{odNo}, #{order.orderNo}, #{auction.auctionNo})
    </insert>
</mapper>